# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  desc "Run e2e tests"
  lane :e2e do
    Dir.chdir "../.." do # Navigate to the root of the project where the Detox files are placed.
      sh("detox build --configuration ios.sim.debug")
      sh("detox test --configuration ios.sim.debug --loglevel trace --record-logs all")
    end
  end


  desc "Create changelog"
  lane :changelog do
    Dir.chdir "../.." do # Navigate to the root
      sh("yarn release")
    end

     # Read the current version from package.json
     package_json = JSON.parse(File.read("../../package.json"))
     new_version = package_json["version"]
 
     # Update the version in package.json
     package_json["version"] = new_version
     File.write("../../package.json", JSON.pretty_generate(package_json))
  end



  desc "Create Release Branch on GitHub"
  lane :gh_setup_beta_before do |values|
    ensure_git_status_clean

    # ensure_git_branch(branch: "main")

    github_token = values[:github_token]
    build = values[:build]
    branch_name = "release-build"

    # Create and push the branch locally
    sh("git checkout -b #{branch_name}-#{build}")

    # Set the GitHub remote URL with credentials
    remote_url = "https://#{github_username}:#{github_token}@github.com/vechainfoundation/veworld-mobile.git"
    sh("git remote set-url origin #{remote_url}")

    # reset_git_repo(force: true)
    # Push the branch to GitHub
    # sh("git push origin #{branch_name}-#{version}")
  end

  desc "Push a new beta build to TestFlight"
  lane :build_beta do |options|
    github_username = options[:username]
    github_token = options[:token]

    build = increment_build_number_in_xcodeproj()

    gh_setup_beta_before(
      github_username:github_username, 
      github_token:github_token,
      build:build
    )

=begin
    get_certificates( # Create or get certificate, and install it
      output_path: "./builds" # Download certificate in the build folder (you don't need to create the folder)
    )

    get_provisioning_profile( # Create or get provisioning profile
      output_path: "./builds",  # Download provisioning profile in the build folder
      filename: "provisioning.mobileprovision" # Rename the local provisioning profile
    )

    update_project_provisioning( # Set the project provisioning profile (related in Xcode to the General > Signing Release section)
      xcodeproj: "VeWorld.xcodeproj",
      target_filter: "VeWorld", # Name of your project
      profile: "./builds/provisioning.mobileprovision",
      build_configuration: "Release"
    )

    update_project_team( # Set the right team on your project
      teamid: CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
    )

    build_app(workspace: "VeWorld.xcworkspace", scheme: "VeWorld", 
      clean: true,
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
            CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier) => CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier) + " AppStore" # Value of this parameter is the name of the Provisioning Profile. By default, it will be "{bundleId} AppStore"
        }
      },
      build_path: "./builds",
      output_directory: "./builds"
    )
      
    upload_to_testflight(
      skip_waiting_for_build_processing: true, 
      apple_id: "6446854569"
    )
=end



  end
end
