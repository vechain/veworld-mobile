name: Build, Test & Scan

on:
    workflow_call:

    workflow_dispatch:
    pull_request:
        branches:
            - "*"
    push:
        branches:
            - main

concurrency:
    group: ${{ github.head_ref || github.ref_name }}-build-test-scan
    cancel-in-progress: true

jobs:
    check-build-changes:
      runs-on: ubuntu-latest
      outputs:
        only_test_scripts_changed: ${{ steps.detect-changes.outputs.only_test_scripts_changed }}
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Detect Test Script Changes
          id: detect-changes
          run: |
            FIRST_COMMIT=$(git rev-list --max-parents=0 HEAD)
            if git show --name-only --pretty="" $FIRST_COMMIT | grep -q "./maestro/"; then
              echo "First commit contains files in the Maestro folder."
              ONLY_MAESTRO=true
            else
              echo "First commit does not contain files in the Maestro folder."
              ONLY_MAESTRO=false
            fi

            # Check if all subsequent commits are in the Maestro folder
            if $ONLY_MAESTRO; then
              for COMMIT in $(git rev-list HEAD); do
                if ! git show --name-only --pretty="" $COMMIT | grep -q "./maestro/"; then
                  echo "Commit $COMMIT contains files outside the Maestro folder."
                  ONLY_MAESTRO=false
                  break
                fi
              done
            fi

            # Output result
            if $ONLY_MAESTRO; then
              echo "only_test_scripts_changed=true" >> $GITHUB_ENV
              echo "only_test_scripts_changed=true" >> $GITHUB_OUTPUT
            else
              echo "only_test_scripts_changed=false" >> $GITHUB_ENV
              echo "only_test_scripts_changed=false" >> $GITHUB_OUTPUT
            fi
            
    build-and-test-ios:
        if: needs.check-build-changes.outputs.only_test_scripts_changed == 'false'
        uses: ./.github/workflows/e2e-ios.yml
        needs: scan
        secrets: inherit

    build-and-test-android:
        if: needs.check-build-changes.outputs.only_test_scripts_changed == 'true'
        uses: ./.github/workflows/e2e-android.yml
        needs: scan
        secrets: inherit

    scan:
        if: needs.check-build-changes.outputs.only_test_scripts_changed == 'false'

        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.17

            - name: Install & Patch packages
              run: yarn install

            - name: Lint & Format Check
              run: yarn lint && yarn format:check

            - name: Tests with Coverage
              env:
                  NODE_OPTIONS: "--max_old_space_size=8192"
                  REACT_APP_WALLET_CONNECT_PROJECT_ID: "f1c07ceecbc6115eaa26b2221c2e43cd"
              run: yarn test:coverage --reporter=json-summary | tee ./coverage.txt  && exit ${PIPESTATUS[0]}

            - name: Jest Coverage Comment
              if: always()
              uses: MishaKav/jest-coverage-comment@main
              with:
                  coverage-summary-path: ./coverage/coverage-summary.json
                  title: Jest Report
                  summary-title: Summary
                  badge-title: Coverage
                  hide-comment: false
                  create-new-comment: false
                  hide-summary: false
                  coverage-title: Coverage
                  coverage-path: ./coverage.txt
                  coverage-path-prefix: ./src/
                  junitxml-title: Tests
                  junitxml-path: junit.xml

            - name: Sonar Args
              id: sonar-args
              run: |
                  if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
                    echo "SONAR_ARGS=-Dsonar.branch.name=main" >> $GITHUB_OUTPUT
                  else
                    echo "SONAR_ARGS=-Dsonar.branch.target=main -Dsonar.branch.name=${{ github.head_ref }}" >> $GITHUB_OUTPUT
                  fi

            - name: SonarCloud Scan
              uses: sonarsource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              with:
                  args: ${{ steps.sonar-args.outputs.SONAR_ARGS }}
