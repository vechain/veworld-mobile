name: E2E Testing - iOS

on:
  workflow_dispatch:

  workflow_call:

jobs:
  check-build-changes:
      runs-on: ubuntu-latest
      outputs:
        only_test_scripts_changed: ${{ steps.detect-changes.outputs.only_test_scripts_changed }}
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Detect Test Script Changes
          id: detect-changes
          run: |
            LAST_COMMIT=$(git rev-parse HEAD)
            CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r $LAST_COMMIT)

            if echo "$CHANGED_FILES" | grep -qvE '^(\.maestro/|\.github/)'; then
              echo "only_test_scripts_changed=false" >> $GITHUB_ENV
              echo "only_test_scripts_changed=false" >> $GITHUB_OUTPUT
            else
              echo "only_test_scripts_changed=true" >> $GITHUB_ENV
              echo "only_test_scripts_changed=true" >> $GITHUB_OUTPUT
            fi
        - name: Print changes
          run: |
            echo "Changes: $CHANGED_FILES"
            echo "Only test scripts changed: ${{ steps.detect-changes.outputs.only_test_scripts_changed }}"
            
  build-e2e-ios:
    name: Build & Test iOS Debug
    runs-on: macos-latest
    environment: ios-release
    permissions:
          actions: write
          contents: read

    # Proceed only if it's either not a release event or it's a pre-release.
    if: ${{ github.event_name != 'release' || (github.event_name == 'release' && github.event.release.prerelease) }} 

    outputs:
      new_build: ${{ steps.check-build-exists.outputs.new_build }}
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Set GH_TOKEN environment variable
        run: echo "GH_TOKEN=${{ steps.generate-token.outputs.token }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # If it's a pre-release, check out the tag corresponding to the pre-release;
          # otherwise, use the triggering branch unless it's a non-pre-release event.
          ref: ${{ (github.event_name == 'release' && github.event.release.prerelease && github.event.release.tag_name) || github.ref }}
      - name: Check build exists
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
          STORED_RUN_ID: ${{ vars.ios_run_id }}
          CURRENT_RUN_ID: ${{ github.run_id }}
          ONLY_TEST: ${{ needs.check-build-changes.outputs.only_test_scripts_changed }}
        run: |
          if [ "$stored_run_id" == "$current_run_id" && $only_test ]; then
              echo "Build already exists. Skipping build."
              echo "new_build=false" >> $GITHUB_ENV
              echo "new_build=false" >> $GITHUB_OUTPUT
            fi
            else
              echo "Build does not exist. Proceeding with build."
              echo "new_build=true" >> $GITHUB_ENV
              echo "new_build=true" >> $GITHUB_OUTPUT
            fi
      # Install Homebrew and applesimutils for Detox
      - name: Install macOS dependencies
        run: |
          brew tap wix/brew
          brew install applesimutils
          brew install fastlane
          bundle install
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
      
      # Setup Ruby
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.207.0
        with:
          bundler-cache: true
        
      # Setup Node.js
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "yarn"
  
      - name: Install CocoaPods
        if: needs.check-build-exists.outputs.new_build == 'true'
        run: |
          yarn install:all

      # Install sentry properties
      - name: Sentry properties
        if: needs.check-build-exists.outputs.new_build == 'true'
        uses: mobiledevops/secret-to-file-action@v1
        with:
            base64-encoded-secret: ${{ secrets.IOS_SENTRY_PROPERTIES }}
            filename: "sentry.properties"
            is-executable: false
            working-directory: "./ios"

      - name: Env default decode
        if: needs.check-build-exists.outputs.new_build == 'true'
        uses: mobiledevops/secret-to-file-action@v1
        with:
             base64-encoded-secret: ${{ secrets.IOS_ENV_DEFAULT }}
             filename: "env.default"
             is-executable: false
             working-directory: "./ios/fastlane"

          
      - name: Env decode
        if: needs.check-build-exists.outputs.new_build == 'true'
        uses: mobiledevops/secret-to-file-action@v1
        with:
             base64-encoded-secret: ${{ secrets.IOS_ENV}}
             filename: ".env"
             is-executable: false
             working-directory: "./ios/fastlane"
      
      - name: Decode prod env   
        if: needs.check-build-exists.outputs.new_build == 'true'     
        uses: mobiledevops/secret-to-file-action@v1
        with:
            base64-encoded-secret: ${{ secrets.RN_ENV_PROD_E2E}}
            filename: ".env.production"
            is-executable: false
            working-directory: "."

      - name: Build apk with fastlane
        if: needs.check-build-exists.outputs.new_build == 'true'
        env:
          MATCH_PASSWORD: ${{ secrets.IOS_MATCH_PASSWORD }}
        run: |
              echo -e "\nIS_CI_BUILD_ENABLED=true" >> .env.production
              cd ios/fastlane
              git config --global url."https://${{ secrets.CI_USER_TOKEN }}@github.com".insteadOf https://github.com
              pwd
              ls
              fastlane build_test_ci username:${{secrets.CI_USER}} token:${{secrets.CI_USER_TOKEN}} version_code:99 version_name:"9.9.9"
              cd ../build
              echo "build finished searching for .app file"
              echo "(find / -name 'VeWorld.app' 2>/dev/null)"
              echo "finished searching"
              SIMULATOR_APP_PATH=$(find ~/ -path "*/Build/Products/Release-iphonesimulator" -print -quit)
              echo "APP_PATH=$SIMULATOR_APP_PATH" >> $GITHUB_ENV
              echo "APP_PATH_DSYM=$(find ~/ -path "*/Build/Products/Release-iphonesimulator" -print -quit)" >> $GITHUB_ENV
              
      - name: Upload .app 
        if: needs.check-build-exists.outputs.new_build == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: Release-iphonesimulator
          path: ${{ env.APP_PATH }}

      - name: Upload run_id number
        if: needs.check-build-exists.outputs.new_build == 'true'
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
          RUN_ID: ${{ github.run_id }}
        run: |  
              successful_run=$(( ${{github.run_id}} ))
              echo "run_id=$successful_run" >> $GITHUB_ENV
              gh variable set IOS_RUN_ID --body "$successful_run"


  test-ios:
    name: Test iOS Release
    runs-on: macos-latest
    needs:
        - check-build-changes
        - build-e2e-ios
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      RUN_ID: ${{ vars.ios_run_id }}
    steps:
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            ref: ${{ github.ref }}

        - name: Download .app
          uses: actions/download-artifact@v4
          with:
            name: Release-iphonesimulator
            run-id: ${{ env.RUN_ID }}

        - uses: devicecloud-dev/device-cloud-for-maestro@v1.2.2
          with:
            api-key: ${{ secrets.DCD_API_KEY }}
            app-file: ./VeWorld.app