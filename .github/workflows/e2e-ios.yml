name: E2E Testing - iOS

on:
  workflow_dispatch:

  workflow_call:

jobs:
  build-e2e-test-ios:
    name: Detox Build & Test iOS Debug
    runs-on: macos
    env:
      XC_SIMULATOR_NAME: iPhone 14

    # Proceed only if it's either not a release event or it's a pre-release.
    if: ${{ github.event_name != 'release' || (github.event_name == 'release' && github.event.release.prerelease) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # If it's a pre-release, check out the tag corresponding to the pre-release;
          # otherwise, use the triggering branch unless it's a non-pre-release event.
          ref: ${{ (github.event_name == 'release' && github.event.release.prerelease && github.event.release.tag_name) || github.ref }}

      # Install Homebrew and applesimutils for Detox
      - name: Install macOS dependencies
        run: |
          brew tap wix/brew
          brew install applesimutils
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1

      # Setup Ruby
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      # Setup Node.js
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "yarn"

      # install dependencies with yarn
      - name: Install & Patch packages
        run: yarn install --frozen-lockfile --network-timeout 300000

      # Install CocoaPods
      - name: Install CocoaPods
        run: npx pod-install

      # Install sentry properties
      - name: Sentry properties
        uses: mobiledevops/secret-to-file-action@v1
        with:
            base64-encoded-secret: ${{ secrets.SENTRY_PROPERTIES }}
            filename: "sentry.properties"
            is-executable: false
            working-directory: "./ios"

      # Start Metro Bundler
      - name: Start Metro Bundler
        run: REACT_APP_UI_LOG=false yarn react-native start &> metro-bundler.log &
       
      - name: Build apk 
        run: |
            pwd
            ls -la
            cd ios
            pwd
            ls
            xcodebuild -list -workspace VeWorld.xcworkspace
            xcodebuild -workspace VeWorld.xcworkspace -scheme VeWorld -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build
            cd build/debug
            ls -la

      - name: Install Maestro
        run: MAESTRO_VERSION=1.36.0 curl -Ls 'https://get.maestro.mobile.dev' | bash
      
        
      - name: Run iOS Simulator
        run: |
          echo "All valid available device types"
          xcrun simctl list devicetypes

          echo "All valid and available runtimes"
          xcrun simctl list runtimes

          echo "Run simulator"
          xcrun simctl boot "${{ env.XC_SIMULATOR_NAME }}"
      - name: Install .app
        run: xcrun simctl install booted ./MyApp.app