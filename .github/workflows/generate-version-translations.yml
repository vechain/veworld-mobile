name: Generate Version Translations

on:
    push:
        branches: ["release/ios-*-android-*"]
        paths:
            - "releases/*/versions/*.json"

jobs:
    translate-version-descriptions:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, 'add translations')"
        permissions:
            contents: write

        steps:
            - name: Generate a token
              id: generate-token
              uses: actions/create-github-app-token@v1
              with:
                  app-id: ${{ secrets.APP_ID }}
                  private-key: ${{ secrets.APP_PRIVATE_KEY }}

            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  token: ${{ steps.generate-token.outputs.token }}

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version-file: .nvmrc
                  cache: "yarn"

            - name: Install 
              run: yarn --frozen-lockfile

            - name: Find latest version files
              id: find-versions
              run: |
                  LATEST_IOS_VERSION=$(cat releases/ios/manifest.json | jq -r '.latest')
                  LATEST_ANDROID_VERSION=$(cat releases/android/manifest.json | jq -r '.latest')

                  echo "IOS_VERSION=$LATEST_IOS_VERSION" >> $GITHUB_ENV
                  echo "ANDROID_VERSION=$LATEST_ANDROID_VERSION" >> $GITHUB_ENV

                  echo "IOS_VERSION_FILE=releases/ios/versions/$LATEST_IOS_VERSION.json" >> $GITHUB_ENV
                  echo "ANDROID_VERSION_FILE=releases/android/versions/$LATEST_ANDROID_VERSION.json" >> $GITHUB_ENV

            - name: Validate English descriptions exist
              id: validate-descriptions
              run: |
                  IOS_DESCRIPTIONS=$(cat $IOS_VERSION_FILE | jq -r '.descriptions.en | length')
                  ANDROID_DESCRIPTIONS=$(cat $ANDROID_VERSION_FILE | jq -r '.descriptions.en | length')

                  if [ "$IOS_DESCRIPTIONS" -eq "0" ] || [ "$ANDROID_DESCRIPTIONS" -eq "0" ]; then
                    echo "English descriptions are not yet filled. Skipping translation."
                    exit 0
                  fi

                  echo "SHOULD_TRANSLATE=true" >> $GITHUB_ENV

            - name: Setup release translation environment
              if: env.SHOULD_TRANSLATE == 'true'
              run: |
                  mkdir -p releaseI18n
                  
                  cat > translo.release.config.json << EOL
                  {
                      "translationPath": "./releaseI18n",
                      "languages": [
                          {
                              "name": "English",
                              "code": "en"
                          },
                          {
                              "name": "Japanese",
                              "code": "ja"
                          },
                          {
                              "name": "Vietnamese",
                              "code": "vi"
                          },
                          {
                              "name": "German",
                              "code": "de"
                          },
                          {
                              "name": "Dutch",
                              "code": "nl"
                          },
                          {
                              "name": "South Korean",
                              "code": "ko"
                          },
                          {
                              "name": "Italian",
                              "code": "it"
                          },
                          {
                              "name": "Swedish",
                              "code": "sv"
                          },
                          {
                              "name": "French",
                              "code": "fr"
                          },
                          {
                              "name": "Taiwanese",
                              "code": "tw"
                          },
                          {
                              "name": "Spanish",
                              "code": "es"
                          },
                          {
                              "name": "Turkey",
                              "code": "tr"
                          },
                          {
                              "name": "Indian",
                              "code": "hi"
                          },
                          {
                              "name": "Chinese",
                              "code": "zh"
                          },
                          {
                              "name": "Russian",
                              "code": "ru"
                          },
                          {
                              "name": "Portuguese",
                              "code": "pt"
                          },
                          {
                              "name": "Polish",
                              "code": "pl"
                          }
                      ],
                      "fixedWords": {
                          "en": {
                              "VeWorld": "VeWorld",
                              "veWorld": "veWorld",
                              "Better": "Better",
                              "On-chain": "On-chain"
                          }
                      }
                  }
                  EOL
                  
                  mv --force translo.release.config.json translo.config.json

            - name: Translate iOS descriptions
              if: env.SHOULD_TRANSLATE == 'true'
              env:
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
              run: |
                  EN_DESCRIPTIONS=$(cat $IOS_VERSION_FILE | jq -r '.descriptions.en')
                  echo "$EN_DESCRIPTIONS" | jq 'to_entries | reduce .[] as $pair ({}; .["ITEM_" + ($pair | .key | tostring)] = ($pair | .value))' > releaseI18n/en.json

                  LANGUAGES=("de" "es" "fr" "hi" "it" "ja" "ko" "nl" "pl" "pt" "ru" "sv" "tr" "tw" "vi" "zh")
                  yarn translo-cli

                  for lang in "${LANGUAGES[@]}"; do
                    if [ -f "releaseI18n/$lang.json" ]; then
                      jq --arg lang "$lang" \
                        ".descriptions[\$lang] = $(cat "releaseI18n/$lang.json" | jq 'to_entries | sort_by(.key | ltrimstr("ITEM_") | tonumber) | map(.value)')" \
                        $IOS_VERSION_FILE > temp.json && mv temp.json $IOS_VERSION_FILE
                    fi
                  done

            - name: Translate Android descriptions
              if: env.SHOULD_TRANSLATE == 'true'
              env:
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
              run: |
                  EN_DESCRIPTIONS=$(cat $ANDROID_VERSION_FILE | jq -r '.descriptions.en')

                  rm -f releaseI18n/*.json
                  
                  echo "$EN_DESCRIPTIONS" | jq 'to_entries | reduce .[] as $pair ({}; .["ITEM_" + ($pair | .key | tostring)] = ($pair | .value))' > releaseI18n/en.json

                  LANGUAGES=("de" "es" "fr" "hi" "it" "ja" "ko" "nl" "pl" "pt" "ru" "sv" "tr" "tw" "vi" "zh")

                  yarn translo-cli

                  for lang in "${LANGUAGES[@]}"; do
                    if [ -f "releaseI18n/$lang.json" ]; then
                      jq --arg lang "$lang" \
                        ".descriptions[\$lang] = $(cat "releaseI18n/$lang.json" | jq 'to_entries | sort_by(.key | ltrimstr("ITEM_") | tonumber) | map(.value)')" \
                        $ANDROID_VERSION_FILE > temp.json && mv temp.json $ANDROID_VERSION_FILE
                    fi
                  done

            - name: Commit and push translations
              if: env.SHOULD_TRANSLATE == 'true'
              run: |
                  git config user.name "vechain-ci"
                  git config user.email "vechain.ci@vechain.org"

                  git add releases/
                  git commit -m "chore: add translations for iOS ${{ env.IOS_VERSION }} and Android ${{ env.ANDROID_VERSION }} release notes"
                  git push origin HEAD
