// /**
//  * A model for the VeWorld encryption keys. There are two encryption keys in VeWorld. One that is generated by VeWorld and is used to encrypt the majority of the stores.
//  *
//  * The second key is generated from the User's passphrase and is used to encrypt the `EncryptionKeyStore` and `LocalWalletStore`.
//  *
//  * `VeWorld` has two operating modes (`UNLOCKED` and `ASK_TO_SIGN`).
//  *  When in `UNLOCKED` mode we will cache both keys and allow the user to sign transactions without the need to re-enter their passphrase.
//  * In `ASK_TO_SIGN` mode we will only store the generatedKey. The user will have to enter their passphrase when signing a transaction. This is the why their are two encryption keys and not just one.
//  *
//  * @field `generatedKey` - the key generated by VeWorld. Used to encrypt the majority of the stores.
//  * @field `userKey` - this is the key generated from the user's passphrase and is used to encrypt the `LocalWalletStore` and `EncryptionKeyStore`
//  */
// import { StorageData } from "../StorageData"

// export interface EncryptionKey extends StorageData {
//     generatedKey: string
//     userKey?: string
// }
