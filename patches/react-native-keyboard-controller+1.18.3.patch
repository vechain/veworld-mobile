diff --git a/node_modules/react-native-keyboard-controller/ios/observers/KeyboardTrackingView.swift b/node_modules/react-native-keyboard-controller/ios/observers/KeyboardTrackingView.swift
index 95ab759..b763ca5 100644
--- a/node_modules/react-native-keyboard-controller/ios/observers/KeyboardTrackingView.swift
+++ b/node_modules/react-native-keyboard-controller/ios/observers/KeyboardTrackingView.swift
@@ -7,10 +7,8 @@
 
 import UIKit
 
-/**
- * A compatibility view that resolves to `KeyboardView` on iOS < 26
- * and uses `keyboardLayoutGuide` on iOS 26+.
- */
+/// A compatibility view that resolves to `KeyboardView` on iOS < 26
+/// and uses `keyboardLayoutGuide` on iOS 26+.
 final class KeyboardTrackingView: UIView {
   private var keyboardView: UIView? { KeyboardViewLocator.shared.resolve() }
   private var keyboardHeight = 0.0
@@ -66,16 +64,18 @@ final class KeyboardTrackingView: UIView {
 
     translatesAutoresizingMaskIntoConstraints = false
 
-    if #available(iOS 17.0, *) {
-      rootView.keyboardLayoutGuide.usesBottomSafeArea = false
+    if #available(iOS 15.0, *) {
+      if #available(iOS 17.0, *) {
+        rootView.keyboardLayoutGuide.usesBottomSafeArea = false
+      }
+
+      NSLayoutConstraint.activate([
+        leadingAnchor.constraint(equalTo: rootView.leadingAnchor, constant: 0),
+        trailingAnchor.constraint(equalTo: rootView.trailingAnchor, constant: 0),
+        bottomAnchor.constraint(equalTo: rootView.keyboardLayoutGuide.topAnchor, constant: 0),
+        heightAnchor.constraint(equalToConstant: 0),
+      ])
     }
-
-    NSLayoutConstraint.activate([
-      leadingAnchor.constraint(equalTo: rootView.leadingAnchor, constant: 0),
-      trailingAnchor.constraint(equalTo: rootView.trailingAnchor, constant: 0),
-      bottomAnchor.constraint(equalTo: rootView.keyboardLayoutGuide.topAnchor, constant: 0),
-      heightAnchor.constraint(equalToConstant: 0),
-    ])
   }
 
   @objc private func keyboardWillAppear(_ notification: Notification) {
